[33mcommit 86e72780711bfe79801b2d4c420cf1e98b149b08[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m)[m
Author: Aneesh Gangurde <113239891+Fu11m3tall@users.noreply.github.com>
Date:   Tue May 27 12:13:14 2025 +0530

    Basics of Django done, Login & Signup frontend yet to be refined, Django administrator basics, Tailwind setup done. Date - 27th May 2025

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..21d0b89[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m.venv/[m
[1mdiff --git a/BRDtoApp.zip b/BRDtoApp.zip[m
[1mnew file mode 100644[m
[1mindex 0000000..d1edaf1[m
Binary files /dev/null and b/BRDtoApp.zip differ
[1mdiff --git a/BRDtoApp/BRDtoApp/__init__.py b/BRDtoApp/BRDtoApp/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/BRDtoApp/BRDtoApp/__pycache__/__init__.cpython-311.pyc b/BRDtoApp/BRDtoApp/__pycache__/__init__.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..8d9e4b9[m
Binary files /dev/null and b/BRDtoApp/BRDtoApp/__pycache__/__init__.cpython-311.pyc differ
[1mdiff --git a/BRDtoApp/BRDtoApp/__pycache__/settings.cpython-311.pyc b/BRDtoApp/BRDtoApp/__pycache__/settings.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..4e8a6d3[m
Binary files /dev/null and b/BRDtoApp/BRDtoApp/__pycache__/settings.cpython-311.pyc differ
[1mdiff --git a/BRDtoApp/BRDtoApp/__pycache__/urls.cpython-311.pyc b/BRDtoApp/BRDtoApp/__pycache__/urls.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..63d1e3c[m
Binary files /dev/null and b/BRDtoApp/BRDtoApp/__pycache__/urls.cpython-311.pyc differ
[1mdiff --git a/BRDtoApp/BRDtoApp/__pycache__/views.cpython-311.pyc b/BRDtoApp/BRDtoApp/__pycache__/views.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..8006899[m
Binary files /dev/null and b/BRDtoApp/BRDtoApp/__pycache__/views.cpython-311.pyc differ
[1mdiff --git a/BRDtoApp/BRDtoApp/__pycache__/wsgi.cpython-311.pyc b/BRDtoApp/BRDtoApp/__pycache__/wsgi.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..63cea20[m
Binary files /dev/null and b/BRDtoApp/BRDtoApp/__pycache__/wsgi.cpython-311.pyc differ
[1mdiff --git a/BRDtoApp/BRDtoApp/asgi.py b/BRDtoApp/BRDtoApp/asgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..8b48cac[m
[1m--- /dev/null[m
[1m+++ b/BRDtoApp/BRDtoApp/asgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mASGI config for BRDtoApp project.[m
[32m+[m
[32m+[m[32mIt exposes the ASGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/5.2/howto/deployment/asgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.asgi import get_asgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'BRDtoApp.settings')[m
[32m+[m
[32m+[m[32mapplication = get_asgi_application()[m
[1mdiff --git a/BRDtoApp/BRDtoApp/settings.py b/BRDtoApp/BRDtoApp/settings.py[m
[1mnew file mode 100644[m
[1mindex 0000000..8996761[m
[1m--- /dev/null[m
[1m+++ b/BRDtoApp/BRDtoApp/settings.py[m
[36m@@ -0,0 +1,140 @@[m
[32m+[m[32m"""[m
[32m+[m[32mDjango settings for BRDtoApp project.[m
[32m+[m
[32m+[m[32mGenerated by 'django-admin startproject' using Django 5.2.1.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/5.2/topics/settings/[m
[32m+[m
[32m+[m[32mFor the full list of settings and their values, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/5.2/ref/settings/[m
[32m+[m[32m"""[m
[32m+[m[32mimport os[m
[32m+[m[32mfrom pathlib import Path[m
[32m+[m
[32m+[m[32m# Build paths inside the project like this: BASE_DIR / 'subdir'.[m
[32m+[m[32mBASE_DIR = Path(__file__).resolve().parent.parent[m
[32m+[m
[32m+[m
[32m+[m[32m# Quick-start development settings - unsuitable for production[m
[32m+[m[32m# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: keep the secret key used in production secret![m
[32m+[m[32mSECRET_KEY = 'django-insecure-daao+&ap68yv+c6=4fxu#x1l^qrniv@p!qkgr2yn3s&rssv(_c'[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: don't run with debug turned on in production![m
[32m+[m[32mDEBUG = True[m
[32m+[m
[32m+[m[32mALLOWED_HOSTS = [][m
[32m+[m
[32m+[m
[32m+[m[32m# Application definition[m
[32m+[m
[32m+[m[32mINSTALLED_APPS = [[m
[32m+[m[32m    'django.contrib.admin',[m
[32m+[m[32m    'django.contrib.auth',[m
[32m+[m[32m    'django.contrib.contenttypes',[m
[32m+[m[32m    'django.contrib.sessions',[m
[32m+[m[32m    'django.contrib.messages',[m
[32m+[m[32m    'django.contrib.staticfiles',[m
[32m+[m[32m    'brd',[m
[32m+[m[32m    'tailwind',[m
[32m+[m[32m    'theme',[m
[32m+[m[32m    'django_browser_reload',[m
[32m+[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mTAILWIND_APP_NAME = "theme"[m
[32m+[m[32mINTERNAL_IPS = ['127.0.0.1'][m
[32m+[m[32mNPM_BIN_PATH = r"C:\Program Files\nodejs\npm.cmd"  # Use the path from 'where npm'[m
[32m+[m
[32m+[m
[32m+[m[32mMIDDLEWARE = [[m
[32m+[m[32m    'django.middleware.security.SecurityMiddleware',[m
[32m+[m[32m    'django.contrib.sessions.middleware.SessionMiddleware',[m
[32m+[m[32m    'django.middleware.common.CommonMiddleware',[m
[32m+[m[32m    'django.middleware.csrf.CsrfViewMiddleware',[m
[32m+[m[32m    'django.contrib.auth.middleware.AuthenticationMiddleware',[m
[32m+[m[32m    'django.contrib.messages.middleware.MessageMiddleware',[m
[32m+[m[32m    'django.middleware.clickjacking.XFrameOptionsMiddleware',[m
[32m+[m[32m    'django_browser_reload.middleware.BrowserReloadMiddleware',[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mROOT_URLCONF = 'BRDtoApp.urls'[m
[32m+[m
[32m+[m[32mTEMPLATES = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'BACKEND': 'django.template.backends.django.DjangoTemplates',[m
[32m+[m[32m        'DIRS': ['templates'],[m
[32m+[m[32m        'APP_DIRS': True,[m
[32m+[m[32m        'OPTIONS': {[m
[32m+[m[32m            'context_processors': [[m
[32m+[m[32m                'django.template.context_processors.request',[m
[32m+[m[32m                'django.contrib.auth.context_processors.auth',[m
[32m+[m[32m                'django.contrib.messages.context_processors.messages',[m
[32m+[m[32m            ],[m
[32m+[m[32m        },[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mWSGI_APPLICATION = 'BRDtoApp.wsgi.application'[m
[32m+[m
[32m+[m
[32m+[m[32m# Database[m
[32m+[m[32m# https://docs.djangoproject.com/en/5.2/ref/settings/#databases[m
[32m+[m
[32m+[m[32mDATABASES = {[m
[32m+[m[32m    'default': {[m
[32m+[m[32m        'ENGINE': 'django.db.backends.sqlite3',[m
[32m+[m[32m        'NAME': BASE_DIR / 'db.sqlite3',[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m# Password validation[m
[32m+[m[32m# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators[m
[32m+[m
[32m+[m[32mAUTH_PASSWORD_VALIDATORS = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m
[32m+[m[32m# Internationalization[m
[32m+[m[32m# https://docs.djangoproject.com/en/5.2/topics/i18n/[m
[32m+[m
[32m+[m[32mLANGUAGE_CODE = 'en-us'[m
[32m+[m
[32m+[m[32mTIME_ZONE = 'UTC'[m
[32m+[m
[32m+[m[32mUSE_I18N = True[m
[32m+[m
[32m+[m[32mUSE_TZ = True[m
[32m+[m
[32m+[m
[32m+[m[32m# Static files (CSS, JavaScript, Images)[m
[32m+[m[32m# https://docs.djangoproject.com/en/5.2/howto/static-files/[m
[32m+[m
[32m+[m[32mSTATIC_URL = 'static/'[m
[32m+[m[32mSTATICFILES_DIRS = [[m
[32m+[m[32m    os.path.join(BASE_DIR, 'static'),[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mMEDIA_URL = '/media/'[m
[32m+[m[32mMEDIA_ROOT = os.path.join(BASE_DIR, 'media')[m
[32m+[m
[32m+[m[32m# Default primary key field type[m
[32m+[m[32m# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field[m
[32m+[m
[32m+[m[32mDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'[m
[1mdiff --git a/BRDtoApp/BRDtoApp/urls.py b/BRDtoApp/BRDtoApp/urls.py[m
[1mnew file mode 100644[m
[1mindex 0000000..86f893f[m
[1m--- /dev/null[m
[1m+++ b/BRDtoApp/BRDtoApp/urls.py[m
[36m@@ -0,0 +1,36 @@[m
[32m+[m[32m"""[m
[32m+[m[32mURL configuration for BRDtoApp project.[m
[32m+[m
[32m+[m[32mThe `urlpatterns` list routes URLs to views. For more information please see:[m
[32m+[m[32m    https://docs.djangoproject.com/en/5.2/topics/http/urls/[m
[32m+[m[32mExamples:[m
[32m+[m[32mFunction views[m
[32m+[m[32m    1. Add an import:  from my_app import views[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', views.home, name='home')[m
[32m+[m[32mClass-based views[m
[32m+[m[32m    1. Add an import:  from other_app.views import Home[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')[m
[32m+[m[32mIncluding another URLconf[m
[32m+[m[32m    1. Import the include() function: from django.urls import include, path[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))[m
[32m+[m[32m"""[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom django.urls import path, include[m
[32m+[m[32mfrom . import views[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mfrom django.conf.urls.static import static[m
[32m+[m
[32m+[m[32murlpatterns = [[m
[32m+[m[32m    path('admin/', admin.site.urls),[m
[32m+[m[32m    path('', views.home, name='home'),[m
[32m+[m[32m    path('about/', views.about, name='about'),[m
[32m+[m[32m    path('contact/', views.contact, name='contact'),[m
[32m+[m[32m    path('services/', views.services, name='services'),[m
[32m+[m[32m    path('brd/', include('brd.urls')),[m
[32m+[m[32m    path('signup/', views.signup, name='signup'),[m
[32m+[m[32m    path('login/', views.login, name='login'),[m
[32m+[m[41m    [m
[32m+[m[32m    #keep the below path last since its a resource hungry and heavy path (Hot Reload path)[m
[32m+[m[32m    path("__reload__/", include("django_browser_reload.urls")),[m
[32m+[m[32m] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)[m
[32m+[m
[1mdiff --git a/BRDtoApp/BRDtoApp/views.py b/BRDtoApp/BRDtoApp/views.py[m
[1mnew file mode 100644[m
[1mindex 0000000..8cabf25[m
[1m--- /dev/null[m
[1m+++ b/BRDtoApp/BRDtoApp/views.py[m
[36m@@ -0,0 +1,83 @@[m
[32m+[m[32mfrom django.http import HttpResponse[m
[32m+[m[32mfrom django.shortcuts import render, redirect[m
[32m+[m[32mfrom django.contrib.auth.models import User[m
[32m+[m[32mfrom django.contrib import messages[m
[32m+[m
[32m+[m[32mdef home(request):[m
[32m+[m[32m    #return HttpResponse("Hello, World. You are all noobs at Home page")[m
[32m+[m[32m    return render(request, 'website/index.html')[m
[32m+[m
[32m+[m[32mdef about(request):[m
[32m+[m[32m    #return HttpResponse("Hello, World. You are all noobs at About page")[m
[32m+[m[32m    return render(request, 'website/about.html')[m
[32m+[m
[32m+[m[32mdef contact(request):[m
[32m+[m[32m    #return HttpResponse("Hello, World. You are all noobs at Contact page")[m
[32m+[m[32m    return render(request, 'website/contact.html')[m
[32m+[m
[32m+[m[32mdef services(request):[m
[32m+[m[32m    #return HttpResponse("Hello, World. You are all noobs at Services page")[m
[32m+[m[32m    return render(request, 'website/services.html')[m
[32m+[m
[32m+[m[32mdef signup(request):[m
[32m+[m[32m    if request.method == 'POST':[m
[32m+[m[32m        email = request.POST.get('email')[m
[32m+[m[32m        password = request.POST.get('password')[m
[32m+[m[32m        confirm_password = request.POST.get('confirm_password')[m
[32m+[m[41m        [m
[32m+[m[32m        # Basic validation[m
[32m+[m[32m        if not email or not password or not confirm_password:[m
[32m+[m[32m            messages.error(request, 'All fields are required')[m
[32m+[m[32m            return render(request, 'website/signup.html')[m
[32m+[m[41m            [m
[32m+[m[32m        if password != confirm_password:[m
[32m+[m[32m            messages.error(request, 'Passwords do not match')[m
[32m+[m[32m            return render(request, 'website/signup.html')[m
[32m+[m[41m            [m
[32m+[m[32m        if User.objects.filter(email=email).exists():[m
[32m+[m[32m            messages.error(request, 'Email already exists')[m
[32m+[m[32m            return render(request, 'website/signup.html')[m
[32m+[m[41m            [m
[32m+[m[32m        # Create user[m
[32m+[m[32m        try:[m
[32m+[m[32m            user = User.objects.create_user([m
[32m+[m[32m                username=email,[m
[32m+[m[32m                email=email,[m
[32m+[m[32m                password=password[m
[32m+[m[32m            )[m
[32m+[m[32m            messages.success(request, 'Account created successfully! Please sign in.')[m
[32m+[m[32m            return redirect('home')  # Redirect to home page after successful signup[m
[32m+[m[32m        except Exception as e:[m
[32m+[m[32m            messages.error(request, f'Error creating account: {str(e)}')[m
[32m+[m[32m            return render(request, 'website/signup.html')[m
[32m+[m[41m            [m
[32m+[m[32m    return render(request, 'website/signup.html')[m
[32m+[m
[32m+[m[32mdef login(request):[m
[32m+[m[32m    if request.method == 'POST':[m
[32m+[m[32m        email = request.POST.get('email')[m
[32m+[m[32m        password = request.POST.get('password')[m
[32m+[m
[32m+[m[32m        # Basic validation[m
[32m+[m[32m        if not email or not password:[m
[32m+[m[32m            messages.error(request, 'Both email and password are required.')[m
[32m+[m[32m            return render(request, 'website/login.html')[m
[32m+[m
[32m+[m[32m        # Authenticate user[m
[32m+[m[32m        user = authenticate(request, username=email, password=password)[m
[32m+[m
[32m+[m[32m        if user is not None:[m
[32m+[m[32m            login(request, user)[m
[32m+[m[32m            messages.success(request, f'Welcome back, {user.username}!')[m
[32m+[m[32m            return redirect('home')  # Replace 'home' with your actual home route name[m
[32m+[m[32m        else:[m
[32m+[m[32m            messages.error(request, 'Invalid email or password.')[m
[32m+[m[32m            return render(request, 'website/login.html')[m
[32m+[m
[32m+[m[32m    return render(request, 'website/login.html')[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[1mdiff --git a/BRDtoApp/BRDtoApp/wsgi.py b/BRDtoApp/BRDtoApp/wsgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..c4ec1ce[m
[1m--- /dev/null[m
[1m+++ b/BRDtoApp/BRDtoApp/wsgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mWSGI config for BRDtoApp project.[m
[32m+[m
[32m+[m[32mIt exposes the WSGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/5.2/howto/deployment/wsgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.wsgi import get_wsgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'BRDtoApp.settings')[m
[32m+[m
[32m+[m[32mapplication = get_wsgi_application()[m
[1mdiff --git a/BRDtoApp/brd/__init__.py b/BRDtoApp/brd/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/BRDtoApp/brd/__pycache__/__init__.cpython-311.pyc b/BRDtoApp/brd/__pycache__/__init__.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..a622fe6[m
Binary files /dev/null and b/BRDtoApp/brd/__pycache__/__init__.cpython-311.pyc differ
[1mdiff --git a/BRDtoApp/brd/__pycache__/admin.cpython-311.pyc b/BRDtoApp/brd/__pycache__/admin.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..50458a1[m
Binary files /dev/null and b/BRDtoApp/brd/__pycache__/admin.cpython-311.pyc differ
[1mdiff --git a/BRDtoApp/brd/__pycache__/apps.cpython-311.pyc b/BRDtoApp/brd/__pycache__/apps.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..8b417eb[m
Binary files /dev/null and b/BRDtoApp/brd/__pycache__/apps.cpython-311.pyc differ
[1mdiff --git a/BRDtoApp/brd/__pycache__/models.cpython-311.pyc b/BRDtoApp/brd/__pycache__/models.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..55f3b92[m
Binary files /dev/null and b/BRDtoApp/brd/__pycache__/models.cpython-311.pyc differ
[1mdiff --git a/BRDtoApp/brd/__pycache__/urls.cpython-311.pyc b/BRDtoApp/brd/__pycache__/urls.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..54562de[m
Binary files /dev/null and b/BRDtoApp/brd/__pycache__/urls.cpython-311.pyc differ
[1mdiff --git a/BRDtoApp/brd/__pycache__/views.cpython-311.pyc b/BRDtoApp/brd/__pycache__/views.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..0e27c46[m
Binary files /dev/null and b/BRDtoApp/brd/__pycache__/views.cpython-311.pyc differ
[1mdiff --git a/BRDtoApp/brd/admin.py b/BRDtoApp/brd/admin.py[m
[1mnew file mode 100644[m
[1mindex 0000000..586d78f[m
[1m--- /dev/null[m
[1m+++ b/BRDtoApp/brd/admin.py[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom .models import BRDVarity[m
[32m+[m
[32m+[m[32m# Register your models here.[m
[32m+[m[32madmin.site.register(BRDVarity)[m
[32m+[m
[32m+[m
[1mdiff --git a/BRDtoApp/brd/apps.py b/BRDtoApp/brd/apps.py[m
[1mnew file mode 100644[m
[1mindex 0000000..42e5476[m
[1m--- /dev/null[m
[1m+++ b/BRDtoApp/brd/apps.py[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mfrom django.apps import AppConfig[m
[32m+[m
[32m+[m
[32m+[m[32mclass BrdConfig(AppConfig):[m
[32m+[m[32m    default_auto_field = 'django.db.models.BigAutoField'[m
[32m+[m[32m    name = 'brd'[m
[1mdiff --git a/BRDtoApp/brd/migrations/0001_initial.py b/BRDtoApp/brd/migrations/0001_initial.py[m
[1mnew file mode 100644[m
[1mindex 0000000..c2e7486[m
[1m--- /dev/null[m
[1m+++ b/BRDtoApp/brd/migrations/0001_initial.py[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m# Generated by Django 5.2.1 on 2025-05-22 10:56[m
[32m+[m
[32m+[m[32mimport django.utils.timezone[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    initial = True[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='BRDVarity',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.CharField(max_length=100)),[m
[32m+[m[32m                ('image', models.ImageField(upload_to='BRDs/')),[m
[32m+[m[32m                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),[m
[32m+[m[32m                ('type', models.CharField(choices=[('BRD', 'BRD'), ('KM', 'KAAM'), ('HW', 'HELLOWORLD'), ('SG', 'SWIGGY'), ('OLA', 'OLA'), ('UB', 'UBER'), ('ZM', 'ZOMATO')], max_length=10)),[m
[3